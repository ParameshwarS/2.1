1. Write a java code with the class named 'acad' and a method 'main'. Hardcode the program
with two integers and print the sum of those two.


package Code;

public class acad {
	public static void main(String[] args) {
		int v1=10,v2=20;
		System.out.println("Sum of 2 numbers:"+(v1+v2));
	}
}


2. Rewrite the above code, where, inputs are provided by the user at runtime and the output
is printed.

package Code;

import java.util.Scanner;

public class acad {

	public static void main(String[] args) {
		int u,v;
		Scanner s=new Scanner(System.in);
		u=s.nextInt();
		v=s.nextInt();
		System.out.println("Sum of 2 numbers:"+(u+v));
	}
}



3. Write a program with method name sum() that accepts two parameters from user and print
the sum two numbers


acad.java

package Code;

import java.util.Scanner;

public class acad {

	public static void main(String[] args) {
		int x,y;
		Scanner s=new Scanner(System.in);
		x=s.nextInt();
		y=s.nextInt();
		sum s=new sum(x,y);
	}
}


sum.java

package test;

public class sum
{
sum(int a,int b)
{
	System.out.println("First number is:"+a);
	System.out.println("Second number is:"+b);
	System.out.println("Sum is:"+(a+b));
}
}


4.Write a program to accepts two numbers from stdin and find all the odd as well as even
numbers present in between them.


package Code;

import java.util.Scanner;

public class acad {

	public static void main(String[] args) {
		int a,b,i=0;
		Scanner in=new Scanner(System.in);
		a=in.nextInt();
		b=in.nextInt();
		for(i=a+1;i<b;i++)
		{
			if(i%2==0)
				System.out.println("Even "+i);
			else
				System.out.println("Odd "+i);
		}
	
	}
}




5.Joe is scared to go to school. When her dad asked the reason, Joe said she is unable to complete
the task given by her teacher. The task was to find the “first 10 multiples” of the number entered
from stdin. 

package Code;

import java.util.Scanner;

public class acad {

	public static void main(String[] args) {
		int a;
		Scanner in=new Scanner(System.in);
		a=in.nextInt();
		for(int i=1;i<=10;i++)
		{
			System.out.println(a+"x"+i+"="+(a*i));
		}

	}
}



6.Write a program consisting method sum() and demonstrate the concept of method
overloading using this method.


acad.java

package Code;

import java.util.Scanner;

public class acad {

	public static void main(String[] args) {
		S1 s=new S1();
		s.sum(1,2);
		s.sum(1.1,2.2);  
	}
}



S1.java

package Code;

public class S1
{
public void sum(int a,int b)
{
	System.out.println("Int Sum is:"+(a+b));
}

public void sum(double a,double b)
{
	System.out.println("Double Sum is:"+(a+b));
}
}




7.Can you overload a method with the same return type? Explain your answer with proper logic.


Yes we can overload a method with same return type. 

The methods can be overloaded 
1.By changing number of arguments
2.By changing the data type of the arguments.

eg:

public class A
{
    void disp(){}
    int disp(int a){print(a);}
}
    
In java, Method Overloading is not possible by changing the return type of the method only.





8.Write a program in java using Arrays that sorts the element in descending order.



package Code;

import java.util.Scanner;
public class acad
{
    public static void main(String[] args) 
    {
        int n, t;
        Scanner in = new Scanner(System.in);
        System.out.print("Enter Size:");
        n = in.nextInt();
        int a[] = new int[n];
        System.out.println("Enter the elements:");
        for (int i=0; i < n; i++) 
        {
            a[i] = in.nextInt();
        }
        for (int i = 0; i < n; i++) 
        {
            for (int j = i + 1; j < n; j++) 
            {
                if (a[i] < a[j]) 
                {
                    t = a[i];
                    a[i] = a[j];
                    a[j] = t;
                }
            }
        }
        System.out.print("Sorted array ");
        for (int i = 0; i < n; i++) 
        {
            System.out.print(a[i]+" ");
        }
        
    }
}
